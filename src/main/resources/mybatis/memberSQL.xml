<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.member">

    <resultMap id="bbsMap" type="com.syaku.bbs.dao.BbsVo">
        <id     property="idx"    column="idx" />
        <result property="user_name" column="user_name" />
        <result property="subject"       column="subject" />
        <result property="content"       column="content" />
        <result property="reg_datetime"       column="reg_datetime" />
    </resultMap>

    <select id="select" resultMap="bbsMap">
        SELECT  * FROM bbs
    </select>

    <select id="selectOne" resultMap="bbsMap">
        SELECT  * FROM bbs WHERE idx = #{idx}
    </select>

    <insert id="insert">
         INSERT INTO bbs ( user_name, subject, content, reg_datetime ) VALUES (
                #{user_name}
              , #{subject}
              , #{content}
              , #{reg_datetime}
         )
    </insert>

    <update id="update">
         UPDATE bbs SET
              user_name = #{user_name},
              subject = #{subject},
              content = #{content},
              reg_datetime = #{reg_datetime}
         WHERE idx = #{idx} LIMIT 1
    </update>

    <delete id="delete">
         DELETE FROM bbs WHERE idx = #{idx}
    </delete>

	<!-- 회원 등록 -->
	<insert id="memberInsert" MemberBean member>
		insert into member (email,pw,nickname,image,description,gender)"
				+"values(?,?,?,?,?,?)";
	</insert>
	
	<!-- 닉네임 가져오기 -->
	<select id="getNickname" String email>
		select nickname from member where email=?
	</select>
	
	<!-- 한 명의 회원정보 가져오기 -->
	<select id="getOneMemberData" String email>
		select * from member where email=?
	</select>
	
	<!-- 로그인 체크 -->
	<select id="memberCheck" String email, String pw>
		select pw from member where email=?
	</select>
	
	<!-- 회원 삭제하기 -->
	<delete id="">
		<select id="memberDelete" String email, String pw>
		select pw from member where email=?
		delete from member where email=?
		</select>
	</delete>
	
	<!-- 회원정보수정 -->
	<update id="memberUpdate" MemberBean memberbean>
		update member set pw=?, nickname=?, image=?, description=?, gender=? where email=?
	</update>
	
	<!-- 비밀번호찾기 -->
	<select id="memberFind" String email>
		select pw from member where email=?
	</select>
	
	<!-- 닉네임 중복 확인 -->
	<select id="memberNicknameCheck" String nickname>
		select * from member where nickname=?
	</select>
	
	<!-- 아이디 중복 확인 -->
	<select id="memberEmailCheck" String email>	
		select * from member where email=?
	</select>
</mapper>