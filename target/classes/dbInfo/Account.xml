<?xml version="1.0" encoding="UTF-8"?>		<!-- MyBatis 홈페이지의 매퍼관련 설정에서 Handling Enums 부분의 소스 코드를 복사 -->
																		<!-- 스프링 2.대 버전에서는 마이바티스가 지원이 안되고 3점대 버전에서는 지원.  -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.member.Account">		<!--namespace : 자바빈 클래스의 패키지를 세팅 -->
	<resultMap type="com.member.Account" id="AccountMap">
		<result column="id" property="id"/>
		<result column="pwd" property="pwd"/>
		<result column="name" property="name"/>
	</resultMap>

	<select id="selectAllAccount" resultMap="AccountMap" resultType="Account">			<!-- id 태그의 sql 결과를 실행하여 resultMap 에 넣어준다. resultType : 별명을 붙여줘서 resultMap으로 지정된 것과 같은 의미를 지님(sqlMapConfig에서 <typeAlias alias=Account type="model.Account" />설정을 해줘야 한다.)-->
		select * from account
	</select>
	
	<select id="selectAccount" parameterType="String" resultMap="AccountMap">			<!-- id 태그의 sql 결과를 실행하여 resultMap 에 넣어준다. resultmap으로 사용해도 되고, resulttype으로 사용해도 된다.-->
		select * from account where id=#{id}
	</select>
	
	<insert id="insertAccount" parameterType="Account">
	    insert into account(id, pwd, name) values(#{id}, #{pwd}, #{name})
	</insert>
	
	<delete id="deleteAccount" parameterType="Account">
		delete from account where id=#{id}
	</delete>
	
	<update id="updateAccount" parameterType="Account">
		update account set pwd=#{pwd}, name=#{name} where id=#{id}
	</update>
	
</mapper>